{
  "name": "site15",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main --first-only --create-ivy-entry-points",
    "nx": "nx",
    "start": "ng serve",
    "test": "ng test",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write --all",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "ng update @nrwl/workspace",
    "workspace-schematic": "nx workspace-schematic",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "start:dev:backend": "npm run migrate && npm run generate && npm run ng serve site15-backend",
    "start:dev:frontend": "npm run ng serve site15-frontend -- --port=4200 --host=0.0.0.0  --disable-host-check",
    "docker:dev:up": "export $(cat ./env/local.env) && ./docker/dev/docker-compose-up.sh && npm run migrate && npm run generate",
    "docker:dev:down": "export $(cat ./env/local.env) && ./docker/dev/docker-compose-down.sh",
    "docker:dev:restart": "npm run docker:dev:down && npm run docker:dev:up",
    "docker:prod:up": "npm run build && ./docker/prod/docker-compose-up.sh && npm run migrate",
    "docker:prod:down": "./docker/prod/docker-compose-down.sh",
    "docker:prod:restart": "npm run docker:prod:down && npm run docker:prod:up",
    "docker:prod:build": "npm run build && ./docker/prod/docker-compose-build.sh",
    "docker:prod-local:up": "export $(cat ./env/local.env) && npm run docker:prod:up",
    "docker:prod-local:down": "export $(cat ./env/local.env) && npm run docker:prod:down",
    "docker:prod-local:restart": "export $(cat ./env/local.env) && npm run docker:prod:restart",
    "k8s:generator:run": "node ./k8s/generators/generator.js",
    "k8s:generator:build": "tsc ./k8s/generators/generator.ts",
    "k8s:generator:run-all-env": "npm run k8s:generator:build && npm run k8s:generator:run-local-env && npm run k8s:generator:run-prod-env",
    "k8s:generator:run-local-env": "export $(cat ./env/local.env) && node ./k8s/generators/generator.js",
    "k8s:generator:run-prod-env": "export $(cat ./env/prod.env) && node ./k8s/generators/generator.js",
    "k8s:local:apply": "export $(cat ./env/local.env) && ./k8s/apply.sh && npm run migrate",
    "k8s:local:build-apply": "export $(cat ./env/local.env) && npm run build:local && npm run k8s:generator:build && ./k8s/build-apply.sh && ./k8s/open-database.sh && npm run migrate",
    "k8s:local:dashboard": "/snap/bin/microk8s dashboard-proxy",
    "k8s:prod:apply": "export $(cat ./env/prod.env) && ./k8s/apply.sh && npm run migrate",
    "build:local:site15-frontend": "ng build site15-frontend --base-href /site15/ --configuration=local",
    "build:local:site15-backend": "ng build site15-backend",
    "build:local": "npm run build:local:site15-frontend && npm run build:local:site15-backend",
    "build:site15-frontend": "ng build site15-frontend --prod",
    "build:site15-backend": "ng build site15-backend --prod",
    "build:prod": " npm run build:site15-frontend && npm run build:site15-backend",
    "build": "npm run build:prod",
    "migrate": "flyway -c .flyway.js migrate",
    "migrate:local": "export $(cat ./env/local.env) && npm run migrate",
    "prisma:generate": "prisma generate",
    "prisma:watch": "npm run prisma:generate && nodemon --watch prisma/schema.prisma -x \"npm run prisma:generate\"",
    "generate": "npm run prisma:generate",
    "generate:local": "export $(cat ./env/local.env) && npm run generate",
    "commit": "npx git-cz"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^11.2.11",
    "@angular/common": "^11.2.11",
    "@angular/compiler": "^11.2.11",
    "@angular/core": "^11.2.11",
    "@angular/forms": "^11.2.11",
    "@angular/platform-browser": "^11.2.11",
    "@angular/platform-browser-dynamic": "^11.2.11",
    "@angular/router": "^11.2.11",
    "@nestjs/common": "^7.6.15",
    "@nestjs/core": "^7.6.15",
    "@nestjs/platform-express": "^7.6.15",
    "@nrwl/angular": "12.0.8",
    "@prisma/client": "^2.21.2",
    "compression": "^1.7.4",
    "reflect-metadata": "^0.1.13",
    "rxjs": "~6.6.7",
    "zone.js": "^0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.1102.10",
    "@angular/cli": "11.2.10",
    "@angular/compiler-cli": "^11.2.11",
    "@angular/language-service": "^11.2.11",
    "@nestjs/schematics": "^7.3.1",
    "@nestjs/testing": "^7.6.15",
    "@nrwl/cypress": "12.0.8",
    "@nrwl/jest": "12.0.8",
    "@nrwl/nest": "12.0.8",
    "@nrwl/node": "12.0.8",
    "@nrwl/workspace": "12.0.8",
    "@types/jest": "26.0.23",
    "@types/node": "~15.0.1",
    "codelyzer": "~6.0.1",
    "connection-string": "^4.3.2",
    "cypress": "^7.2.0",
    "dotenv": "8.2.0",
    "eslint": "7.25.0",
    "jest": "26.6.3",
    "jest-preset-angular": "8.4.0",
    "kubernetes-types": "^1.17.0-beta.1",
    "node-flywaydb": "^3.0.5",
    "nodemon": "^2.0.7",
    "prettier": "2.2.1",
    "prisma": "^2.21.2",
    "ts-jest": "26.5.5",
    "ts-node": "~9.1.1",
    "tslint": "~6.1.3",
    "typescript": "~4.0.3",
    "yaml": "^1.10.2"
  }
}
